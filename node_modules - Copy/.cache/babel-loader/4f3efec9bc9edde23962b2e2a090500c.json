{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\816001354\\\\OneDrive\\\\Desktop\\\\MinusOne\\\\src\\\\components\\\\IdeaComponents\\\\AvailableIdeas.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Select from './Select';\nimport { Button } from '@mui/material';\nimport List from '../List';\nimport GradientBtn from '../GradientBtn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 80\n}, {\n  id: 'type',\n  label: 'Type',\n  align: 'left',\n  minWidth: 49\n}];\n\nfunction createData(name, type) {\n  return {\n    name,\n    type\n  };\n}\n\nconst rows = [createData( /*#__PURE__*/_jsxDEV(List, {\n  ideaName: \"Online Auditorium\",\n  ideaDescription: \"create the worlds largest and most exciting online auditorium\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 14\n}, this), 'IN'), createData( /*#__PURE__*/_jsxDEV(List, {\n  ideaName: \"Online Auditorium\",\n  ideaDescription: \"create the worlds largest and most exciting online auditorium\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 14\n}, this), 'CN'), createData( /*#__PURE__*/_jsxDEV(List, {\n  ideaName: \"Online Auditorium\",\n  ideaDescription: \"create the worlds largest and most exciting online auditorium\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 14\n}, this), 'IT'), createData('United States', 'US'), createData('Canada', 'CA'), createData('Australia', 'AU'), createData('Germany', 'DE'), createData('Ireland', 'IE'), createData('Mexico', 'MX'), createData('Japan', 'JP'), createData('France', 'FR'), createData('United Kingdom', 'GB'), createData('Russia', 'RU'), createData('Nigeria', 'NG'), createData('Brazil', /*#__PURE__*/_jsxDEV(Select, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 24\n}, this))];\nexport default function StickyHeadTable() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: 180,\n      marginRight: 180\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      variant: \"elevation24\",\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: column.align,\n                style: {\n                  minWidth: column.minWidth\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GradientBtn, {\n        children: \"Smart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/Users/816001354/OneDrive/Desktop/MinusOne/src/components/IdeaComponents/AvailableIdeas.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Select","Button","List","GradientBtn","columns","id","label","minWidth","align","createData","name","type","rows","StickyHeadTable","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","display","justifyContent","alignItems","marginLeft","marginRight","width","overflow","map","column","slice","row","format","code","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Select from './Select';\r\nimport { Button } from '@mui/material';\r\nimport List from '../List';\r\nimport GradientBtn from '../GradientBtn';\r\n\r\n\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 80 },\r\n  { id: 'type', label: 'Type', align: 'left', minWidth: 49 },\r\n];\r\n\r\nfunction createData(name, type) {\r\n  return { name, type };\r\n}\r\n\r\nconst rows = [\r\n  createData(<List ideaName=\"Online Auditorium\" ideaDescription=\"create the worlds largest and most exciting online auditorium\"/>, 'IN'),\r\n  createData(<List ideaName=\"Online Auditorium\" ideaDescription=\"create the worlds largest and most exciting online auditorium\"/>, 'CN'),\r\n  createData(<List ideaName=\"Online Auditorium\" ideaDescription=\"create the worlds largest and most exciting online auditorium\"/>, 'IT'),\r\n  createData('United States', 'US'),\r\n  createData('Canada', 'CA'),\r\n  createData('Australia', 'AU'),\r\n  createData('Germany', 'DE'),\r\n  createData('Ireland', 'IE'),\r\n  createData('Mexico', 'MX'),\r\n  createData('Japan', 'JP'),\r\n  createData('France', 'FR'),\r\n  createData('United Kingdom', 'GB'),\r\n  createData('Russia', 'RU'),\r\n  createData('Nigeria', 'NG'),\r\n  createData('Brazil', <Select />),\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', marginLeft: 180, marginRight: 180}}>\r\n      <Paper variant='elevation24' sx={{ width: '100%', overflow: 'hidden' }}>\r\n        <TableContainer>\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  return (\r\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell key={column.id} align={column.align}>\r\n                            {column.format && typeof value === 'number'\r\n                              ? column.format(value)\r\n                              : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 100]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n        <GradientBtn>Smart</GradientBtn>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}